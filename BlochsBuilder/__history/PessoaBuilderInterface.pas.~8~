unit PessoaBuilderInterface;

interface

uses
  Types,
  Pessoa,
  Endereco,
  Telefone,
  System.SysUtils,
  System.Generics.Collections;

type
  iPessoaBuiler = interface
    function Nome(Value: String): iPessoaBuiler;
    function SobreNome(Value: String): iPessoaBuiler;
    function DataNascimento(Value: String): iPessoaBuiler;
    function Logradouro(Value: String = ''): iPessoaBuiler;
    function Numero(Value: String = ''): iPessoaBuiler;
    function Complemento(Value: String = ''): iPessoaBuiler;
    function Bairro(Value: String = ''): iPessoaBuiler;
    function Cidade(Value: String = ''): iPessoaBuiler;
    function Pais(Value: String = ''): iPessoaBuiler;
    function Telefone(vDDD, vTel: Integer; Tipo: TTipoTelefone): iPessoaBuiler;
    function getPessoa: TPessoa;
  end;

  TPessoaBuiler = class(TInterfacedObject, iPessoaBuiler)
  private
    FPessoa: TPessoa;
    FEndereco: TEndereco;
    FTelefone: TObjectList<TTelefone>;

    procedure addTel(vDDD, vNumero: Integer; vTipo: TTipoTelefone);
  public
    constructor Create;
    destructor Destroy; override;
    class function New: iPessoaBuiler;
    function Nome(Value: String): iPessoaBuiler;
    function SobreNome(Value: String): iPessoaBuiler;
    function DataNascimento(Value: String): iPessoaBuiler;
    function Logradouro(Value: String = ''): iPessoaBuiler;
    function Numero(Value: String = ''): iPessoaBuiler;
    function Complemento(Value: String = ''): iPessoaBuiler;
    function Bairro(Value: String = ''): iPessoaBuiler;
    function Cidade(Value: String = ''): iPessoaBuiler;
    function Pais(Value: String = ''): iPessoaBuiler;
    function Telefone(vDDD, vTel: Integer; Tipo: TTipoTelefone): iPessoaBuiler;
    function getPessoa: TPessoa;
  end;

implementation

procedure TPessoaBuiler.addTel(vDDD, vNumero: Integer; vTipo: TTipoTelefone);
var
  I : Integer;
begin
  FTelefone.Add(TTelefone.Create);
  I := FTelefone.Count -1;
  FTelefone.Items[I].DDD := vDDD;
  FTelefone.Items[I].Numero := vNumero;
  FTelefone.Items[I].Tipo := vTipo;
end;

function TPessoaBuiler.Bairro(Value: String): iPessoaBuiler;
begin
  FEndereco.Bairro := Value;
  Result := Self;
end;

function TPessoaBuiler.Cidade(Value: String): iPessoaBuiler;
begin
  FEndereco.Cidade := Value;
  Result := Self;
end;

function TPessoaBuiler.Complemento(Value: String): iPessoaBuiler;
begin
  FEndereco.Complemento := Value;
  Result := Self;
end;

constructor TPessoaBuiler.Create;
begin
  FPessoa := TPessoa.Create;
  FEndereco := TEndereco.Create;
  FTelefone := TObjectList<TTelefone>.Create;
end;

function TPessoaBuiler.DataNascimento(Value: String): iPessoaBuiler;
begin
  FPessoa.Dia := Copy(Value,1,2).ToInteger;
  FPessoa.Mes := Copy(Value,4,2).ToInteger;
  FPessoa.Ano := Copy(Value,7,4).ToInteger;
  Result := Self;
end;

destructor TPessoaBuiler.Destroy;
begin
  FPessoa.DisposeOf;
  FEndereco.DisposeOf;
  FTelefone.DisposeOf;
  inherited;
end;

function TPessoaBuiler.getPessoa: TPessoa;
begin
  FPessoa.Endereco := FEndereco;
  FPessoa.Telefone := FTelefone;
  Result := Self.FPessoa;
end;

function TPessoaBuiler.Logradouro(Value: String): iPessoaBuiler;
begin

end;

class function TPessoaBuiler.New: iPessoaBuiler;
begin
  Result := Self.Create;
end;

function TPessoaBuiler.Nome(Value: String): iPessoaBuiler;
begin

end;

function TPessoaBuiler.Numero(Value: String): iPessoaBuiler;
begin

end;

function TPessoaBuiler.Pais(Value: String): iPessoaBuiler;
begin

end;

function TPessoaBuiler.SobreNome(Value: String): iPessoaBuiler;
begin

end;

function TPessoaBuiler.Telefone(vDDD, vTel: Integer; Tipo: TTipoTelefone)
  : iPessoaBuiler;
begin

end;

end.
